#ifndef TRN_CONFIG_H
#define TRN_CONFIG_H

/* HAS_GETPWENT:
 *      This symbol, if defined, indicates that the getpwent routine is
 *      available for sequential access of the passwd database.
 *      If this is not available, the older getpw() function may be available.
 */
#cmakedefine HAS_GETPWENT

/* HAS_NEWS_ADMIN:
 *      This symbol, if defined, indicates that NEWS_ADMIN contains the login
 *      name of the news administrator.
 */
#cmakedefine HAS_NEWS_ADMIN
#define NEWS_ADMIN "@NEWS_ADMIN@"

/* NORM_SIG:
 *      This symbol, if defined, indicates that normal signal handling routines
 *      should be used, as opposed to the ones in 4.1bsd (sigset, etc.).
 */
#cmakedefine NORM_SIG

/* HAS_RDCHK:
 *      This symbol, if defined, indicates that the rdchk routine is available
 *      to find out if there is input pending on an IO channel.  Generally
 *      the routine is used only if FIONREAD and O_NDELAY aren't available.
 */
#cmakedefine HAS_RDCHK

/* HAS_SIGBLOCK:
 *      This symbol, if defined, indicates that the sigblock routine is
 *      available to block signal reception.
 */
#cmakedefine HAS_SIGBLOCK

/* HAS_SIGHOLD:
 *      This symbol, if defined, indicates that the sighold routine is
 *      available to hold signals.
 */
#cmakedefine HAS_SIGHOLD

/* UNION_WAIT:
 *      This symbol if defined indicates to the C program that the argument
 *      for the wait() system call should be declared as 'union wait status'
 *      instead of 'int status'. You probably need to include <sys/wait.h>
 *      in the former case (see I_SYSWAIT).
 */
#cmakedefine UNION_WAIT

/* HAS_VFORK:
 *      This symbol, if defined, indicates that vfork() exists.
 */
#cmakedefine HAS_VFORK

/* Signal_t:
 *      This symbol's value is either "void" or "int", corresponding to the
 *      appropriate return type of a signal handler.  Thus, you can declare
 *      a signal handler using "Signal_t (*handler)()", and define the
 *      handler using "Signal_t handler(sig)".
 */
#define Signal_t @SIGNAL_T@     // Signal handler's return type

/* USE_WIFSTAT:
 *      This symbol, if defined, indicates to the C program that the argument
 *      for the WIFxxx set of macros such as WIFSIGNALED or WIFEXITED can
 *      be of the same kind as the one used to hold the wait() status. Should
 *      only matter on HP-UX, where the macros are incorrectly written and
 *      therefore cause programs using them with an 'union wait' variable
 *      to not compile properly. See also UNION_WAIT.
 */
#cmakedefine USE_WIFSTAT

/* DEFAULT_EDITOR:
 *      This symbol contains the full pathname of the default editor.
 */
#define DEFAULT_EDITOR "@DEFAULT_EDITOR@"

/* I_SYS_STAT:
 *      This symbol, if defined, indicates to the C program that it should
 *      include <sys/stat.h>.
 */
#cmakedefine I_SYS_STAT

/* I_SYS_IOCTL:
 *      This symbol, if defined, indicates that <sys/ioctl.h> exists and should
 *      be included. Otherwise, include <sgtty.h> or <termio.h>.
 */
/* I_SYS_FILIO:
 *      This symbol, if defined, indicates that <sys/filio.h> exists and
 *      should be included instead of <sys/ioctl.h>.
 */
#cmakedefine I_SYS_IOCTL
#cmakedefine I_SYS_FILIO

/* I_SYS_WAIT:
 *      This symbol, if defined, indicates to the C program that it should
 *      include <sys/wait.h>.
 */
#cmakedefine I_SYS_WAIT

/* I_TERMCAP
 *      This symbol, if defined, indicates that <termcap.h> should be included.
 */
#cmakedefine I_TERMCAP

/* I_TERMIOS:
 *      This symbol, if defined, indicates that the program should include
 *      the POSIX <termios.h> rather than <sgtty.h> or <termio.h>.
 *      There are also differences in the ioctl() calls that depend on the
 *      value of this symbol.
 */
#cmakedefine I_TERMIOS

/* I_UNISTD:
 *      This symbol, if defined, indicates to the C program that it should
 *      include <unistd.h>.
 */
#cmakedefine I_UNISTD

/* I_UTIME:
 *      This symbol, if defined, indicates to the C program that it should
 *      include <utime.h>.
 */
#cmakedefine I_UTIME

/* I_SYS_UTIME:
 *      This symbol, if defined, indicates to the C program that it should
 *      include <sys/utime.h>.
 */
#cmakedefine I_SYS_UTIME

/* I_VFORK:
 *      This symbol, if defined, indicates to the C program that it should
 *      include <vfork.h>.
 */
#cmakedefine I_VFORK

/* MAIL_FILE:
 *      This symbol contains the interpretable name of the mail spool file
 *      for the current user.  The program must be prepared to substitute
 *      the HOME directory for %~, and the login id for %L.
 */
#define MAIL_FILE "@MAIL_FILE@"

/* MBOX_CHAR:
 *      This symbol contains a character which will match the beginning
 *      of a mailbox file.
 */
#define MBOX_CHAR '@MBOX_CHAR@'

/* PASS_NAMES:
 *      This symbol, if defined, indicates that full names are stored in
 *      the /etc/passwd file.
 */
/* BERKELEY_NAMES:
 *      This symbol, if defined, indicates that full names are stored in
 *      the /etc/passwd file in Berkeley format (name first thing, everything
 *      up to first comma, with & replaced by capitalized login id, yuck).
 */
#cmakedefine PASS_NAMES // (undef to take name from ~/.fullname)
#cmakedefine BERKELEY_NAMES // (that is, ":name,stuff:")

/* INSTALL_PREFIX:
 *      This symbol contains the name of the install prefix for this package.
 */
#define INSTALL_PREFIX "@INSTALL_PREFIX@"

/* PREF_SHELL:
 *      This symbol contains the full name of the preferred user shell on this
 *      system.  Usual values are /bin/csh, /bin/ksh, /bin/sh.
 */
#define PREF_SHELL "@PREF_SHELL@"

/* ROOT_UID:
 *      This symbol contains the uid of root, normally 0.
 */
#define ROOT_UID @ROOT_UID@

/* ACTIVE:
 *      The name of the active file for the news system.  This file contains
 *      the list of active newsgroups.  The name may have ~ on the front.
 */
/* ACTIVE_TIMES:
 *      The name of the active.times file for the news system.
 */
#define ACTIVE "@ACTIVE@"
#define ACTIVE_TIMES "@ACT_TIMES@"

/* HAS_GETHOSTNAME:
 *      This symbol, if defined, indicates that the C program may use the
 *      gethostname() routine to derive the host name.
 */
/* HAS_UNAME:
 *      This symbol, if defined, indicates that the C program may use the
 *      uname() routine to derive the host name.
 */
/* PIPE_HOST_CMD:
 *      This symbol, if defined, indicates that the C program may use the
 *      contents of PIPE_HOST_CMD as a command to feed to the popen() routine
 *      to derive the host name.
 *      Note that the command uses a fully qualified path, so that it is safe
 *      even if used by a process with super-user privileges.
 */
/* HAS_RES_INIT:
 *      This symbol, if defined, indicates that the C program may use the
 *      res_init() routine to derive the domain.
 */
/* HAS_GETDOMAINNAME:
 *      This symbol, if defined, indicates that the C program may use the
 *      getdomainname() routine to derive the domain.
 */
#cmakedefine HAS_GETHOSTNAME
#cmakedefine HAS_UNAME
#cmakedefine PIPE_HOST_CMD "@PIPE_HOST_CMD@"     // How to get the host name
#cmakedefine HAS_RES_INIT
#cmakedefine HAS_GETDOMAINNAME

/* HAS_TERMLIB:
 *      This symbol, when defined, indicates that termlib-style routines
 *      are available.  There is nothing to include.
 */
#cmakedefine HAS_TERMLIB

/* IGNORE_ORG:
 *      This symbol, if defined, indicates that the ORGANIZATION environment
 *      variable does not contain an organization name.
 */
#cmakedefine IGNORE_ORG

/* SERVER_NAME:
 *      When using NNTP, this symbol indicates the server name or a
 *      file to open to read the server name.
 */
/* HAS_LOCAL_SPOOL:
 *      This symbol, if defined, indicates that there's a local spool
 *      directory configured into trn.
 */
#define SERVER_NAME "@SERVER_NAME@"
#cmakedefine HAS_LOCAL_SPOOL

/* MIMECAP:
 *      This symbol contains the pathname of mimecap file, which controls
 *      what programs get run when handling mime articles.  It is often
 *      metamail's "mailcap" file, and is the same format.
 */
#define MIMECAP "@MIMECAP@"

/* NEWS_LIB:
 *      This symbol contains the name of the directory serving as the news
 *      library.  The program must be prepared to do ~ expansion on it.
 */
#define NEWS_LIB "@NEWS_LIB@"

/* EXTRA_INEWS:
 *      Contains the full path and filename of an inews to use for local
 *      postings, or nothing.
 */
#define EXTRA_INEWS "@EXTRA_INEWS@"

/* GROUP_DESC:
 *      Contains the full path and filename of the "newsgroups" file for
 *      group descriptions, or nothing.
 */
#define GROUP_DESC "@GROUP_DESC@"

/* SUBSCRIPTIONS:
 *      Contains the full path and filename of the list of default
 *      subscriptions, or nothing.
 */
#define SUBSCRIPTIONS "@SUBSCRIPTIONS@"

/* NEWS_SPOOL:
 *      This symbol contains the directory name where news articles are
 *      spooled.  The program must be prepared to do ~ expansion on it.
 */
#define NEWS_SPOOL "@NEWS_SPOOL@"

/* ORG_NAME:
 *      This symbol contains either the organization name or the full pathname
 *      of a file containing the organization name, which the program must
 *      be prepared to open and substitute the contents of.
 */
#define ORG_NAME "@ORG_NAME@"

/* POSTING_HOSTNAME:
 *      This symbol contains the posting host's name or a file from which
 *      to read its name.
 */
/* HOST_BITS:
 *      Set to true if we should compare only the domain portion of the
 *      hostname when looking for local articles.
 */
#define POSTING_HOSTNAME "@POSTING_HOSTNAME@"
#cmakedefine01 HOST_BITS

/* PRIVATE_LIB:
 *      This symbol contains the name of the private library for this package.
 *      The library is private in the sense that it needn't be in anyone's
 *      execution path, but it should be accessible by the world.  The program
 *      should be prepared to do ~ expansion.
 */
#define PRIVATE_LIB "@PRIVATE_LIB@"

/* OVERVIEW_DIR:
 *      This symbol indicates where the overview files go.
 */
/* OVERVIEW_FMT:
 *      The overview.fmt file.
 */
#define OVERVIEW_DIR    "@OVERVIEW_DIR@"
#define OVERVIEW_FMT    "@OVERVIEW_FMT@"

/* THREAD_INIT:
 *      This symbol indicates we act like trn no matter what our name is.
 */
/* SELECT_INIT:
 *      This symbol indicates we default to the selector for group entry.
 */
#cmakedefine01 THREAD_INIT
#cmakedefine01 SELECT_INIT

#define CALL_INEWS "@USE_INEWS@ -h <%h"
#define NEWSPOSTER "@BIN@/Pnews -h %h"
#define MAILPOSTER "@BIN@/Rnmail -h %h"

/* MSDOS:
 *      This is defined if this is an MSDOS system.
 */
#cmakedefine MSDOS

#endif

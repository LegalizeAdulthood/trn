include(CheckIncludeFile)
include(CheckSymbolExists)

#
# Perform inspections of the system and configure accordingly.
#
function(configure)
    if(WIN32)
        set(DIRENTRYTYPE "struct dirent")
        set(EMULATE_NDIR ON)
    endif()
    check_symbol_exists(ftime "sys/types.h;sys/timeb.h" HAS_FTIME)
    check_include_file(dirent.h I_DIRENT)
    check_include_file(sgtty.h I_SGTTY)
    check_include_file(sys/dir.h I_SYS_DIR)
    check_include_file(sys/filio.h I_SYS_FILIO)
    check_include_file(sys/ioctl.h I_SYS_IOCTL)
    check_include_file(sys/ndir.h I_SYS_NDIR)
    check_include_file(sys/timeb.h I_SYS_TIMEB)
    check_include_file(sys/utime.h I_SYS_UTIME)
    check_include_file(sys/wait.h I_SYS_WAIT)
    check_include_file(termio.h I_TERMIO)
    check_include_file(termios.h I_TERMIOS)
    check_include_file(unistd.h I_UNISTD)
    check_include_file(utime.h I_UTIME)
    check_include_file(vfork.h I_VFORK)
    if(I_UNISTD)
        check_symbol_exists(getcwd "unistd.h" HAS_GETCWD)
        check_symbol_exists(getdomainname "unistd.h" HAS_GETDOMAINNAME)
        check_symbol_exists(gethostname "unistd.h" HAS_GETHOSTNAME)
    endif()
    if(NOT HAS_GETCWD)
        check_symbol_exists(getcwd "direct.h" HAS_GETCWD)
    endif()
    if(NOT HAS_GETHOSTNAME)
        set(CMAKE_REQUIRED_LIBRARIES "ws2_32.lib")
        check_symbol_exists(gethostname "WinSock2.h" HAS_GETHOSTNAME)
        unset(CMAKE_REQUIRED_LIBRARIES)
    endif()
    check_include_file(sys/stat.h I_SYS_STAT)
#    if(I_SYS_STAT)
#       check_symbol_exists(mkdir "sys/stat.h" HAS_MKDIR)
#    endif()
#    if(NOT HAS_MKDIR)
#       check_symbol_exists(mkdir "direct.h" HAS_MKDIR)
#    endif()
    set(HAS_MKDIR ON)
    set(HAS_TERMLIB ON)
    set(I_TIME ON)
    set(MBOX_CHAR "F")
    if(WIN32)
        set(MSDOS ON)
    endif()
    if(NOT WIN32)
        set(HAS_NEWS_ADMIN ON)
        set(NEWS_ADMIN "root")
    endif()
    set(NORMSIG ON)
    set(HOSTBITS ON)
    set(PHOSTNAME "localhost")
    set(ROOT_ID "0")
    set(SERVER_NAME "news.gmane.io")
    set(SIGNAL_T "void")
    set(SUPPORT_XTHREAD ON)
    set(TRN_INIT OFF)
    set(TRN_SELECT ON)
    if(WIN32)
        string(REPLACE "\\" "/" _ProgramData "$ENV{ProgramData}")
        set(NEWSLIB "${_ProgramData}/trn/news")
        set(PRIVLIB "${_ProgramData}/trn/lib")
    endif()
    set(EXTRAINEWS "")
    set(GROUPDESC "")
    configure_file(config.h.in config.h)
endfunction()

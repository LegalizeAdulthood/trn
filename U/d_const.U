?RCS: $Id$
?RCS:
?RCS: Copyright (c) 1991-1993, Raphael Manfredi
?RCS: 
?RCS: You may redistribute only under the terms of the Artistic Licence,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic Licence; a copy of which may be found at the root
?RCS: of the source tree for dist 3.0.
?RCS:
?RCS: $Log$
?RCS: Revision 1.1  2000/05/25 15:40:49  wayned
?RCS: Custom metaconfig modules used to make Configure.
?RCS:
?RCS: Revision 3.0.1.1  1993/11/10  17:33:41  ram
?RCS: patch14: stronger const check with added typedef for MIPS cc
?RCS:
?RCS: Revision 3.0  1993/08/18  12:05:51  ram
?RCS: Baseline for dist 3.0 netwide release.
?RCS:
?MAKE:d_const: cat cc ccflags Setvar
?MAKE:	-pick add $@ %<
?S:d_const:
?S:	This variable conditionally defines the HASCONST symbol, which
?S:	indicates to the C program that this C compiler knows about the
?S:	const type.
?S:.
?C:HASCONST ~ %<:
?C:	This symbol, if defined, indicates that this C compiler knows about
?C:	the const type. There is no need to actually test for that symbol
?C:	within your programs. The mere use of the "const" keyword will
?C:	trigger the necessary tests.
?C:.
?H:?%<:#$d_const HASCONST	/**/
?H:?%<:#ifndef HASCONST
?H:?%<:#define const
?H:?%<:#endif
?H:.
: ERROR d_const.U should not be included in Configure

?RCS: $Id$
?RCS:
?RCS: Copyright (c) 1991-1993, Raphael Manfredi
?RCS: 
?RCS: You may redistribute only under the terms of the Artistic Licence,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic Licence; a copy of which may be found at the root
?RCS: of the source tree for dist 3.0.
?RCS:
?RCS: $Log$
?RCS: Revision 1.1  2000/05/25 15:40:49  wayned
?RCS: Custom metaconfig modules used to make Configure.
?RCS:
?RCS: Revision 3.0  1993/08/18  12:09:23  ram
?RCS: Baseline for dist 3.0 netwide release.
?RCS:
?MAKE:newslib newslibexp d_inews installinews useinews extrainews \
	groupdesc subscriptions: test inews Filexp Oldconfig servername \
	Getfile d_nntp d_local echo cat Prefixit spackage package
?MAKE:	-pick add $@ %<
?S:newslib:
?S:	This variable contains the eventual value of the NEWSLIB symbol,
?S:	which holds the name of the directory serving as the news library.
?S:	It may have a ~ on the front.  See newslibexp for expanded version.
?S:.
?S:newslibexp:
?S:	This variable contains the ~ expanded name of the news library
?S:	directory.  See newslib.
?S:.
?S:d_inews:
?S:	Contains "defined" if we should install our own inews.
?S:.
?S:installinews:
?S:	Contains path in which to install our own inews.
?S:.
?S:useinews:
?S:	Contains the inews we will use.
?S:.
?S:extrainews:
?S:	Points to an extra inews for local posting or is empty.
?S:.
?S:groupdesc:
?S:	Points to the "newsgroups" file.
?S:.
?S:subscriptions:
?S:	Points to the list of default subscriptions or is empty.
?S:.
?C:NEWSLIB:
?C:	This symbol contains the name of the directory serving as the news
?C:	library.  The program must be prepared to do ~ expansion on it.
?C:.
?C:USEINEWS:
?C:	Contains the full path and filename of the inews to use.
?C:.
?C:EXTRAINEWS:
?C:	Contains the full path and filename of an inews to use for local
?C:	postings, or nothing.
?C:.
?C:GROUPDESC:
?C:	Contains the full path and filename of the "newsgroups" file for
?C:	group descriptions, or nothing.
?C:.
?C:SUBSCRIPTIONS:
?C:	Contains the full path and filename of the list of default
?C:	subscriptions, or nothing.
?C:.
?H:#define NEWSLIB "$newslib"		/**/
?H:#define USEINEWS "$useinews"		/**/
?H:#define EXTRAINEWS "$extrainews"	/**/
?H:#define GROUPDESC "$groupdesc"	/**/
?H:#define SUBSCRIPTIONS "$subscriptions"	/**/
?H:.
?T:oldnewslib
?LINT:change inews
: figure out news library
case "$d_local" in
"$define")
    case "$newslib" in
    '') dflt=/usr/lib/news;;
    *)  dflt=$newslib;;
    esac
    $echo " "
    fn=d~
    rp='Where is the news library directory for local news?'
    . ./getfile
    oldnewslib="$newslibexp"
    newslib="$ans"
    newslibexp="$ansexp"
    if $test -f $newslibexp/inews; then
	$echo "Aha!  Inews is really in $newslibexp!" >&4
	case "$inews" in
	inews) : null;;
	*) $echo "(There's a public version too: $inews.)" >&4;;
	esac
	inews="$newslibexp/inews"
    fi
    ;;
*)  if test "X$newslib" = X -o ! -d "$newslib"; then
	newslib='/tmp'
    fi
    newslibexp=`./filexp $newslib`
    ;;
esac

case "$servername" in
local)	if test "X$groupdesc" = X -o "X$groupdesc" = "X$oldnewslib/newsgroups"; then
	dflt="$newslib/newsgroups"
    else
	dflt="$groupdesc"
    fi
    $cat <<EOM

The newsgroups file contains a list of newsgroups and their descriptions
and is usually in the same directory as the active file.

EOM
    fn=l~n:newsgroups
    rp='Where is the newsgroups file? ("none" ok)'
    . ./getfile
    groupdesc="$ans"

    if test "X$subscriptions" = X -o "X$subscriptions" = "X$oldnewslib/subscriptions"; then
	dflt="$newslib/subscriptions"
    else
	dflt="$subscriptions"
    fi
    $cat <<EOM

The subscriptions file contains a list of the groups you'd like a new user
to subscribe to by default (a sample version is in the samples directory).
If you don't wish to use this file, answer "none".

EOM
    fn=l~n:subscriptions
    rp='Where is the subscriptions file? ("none" ok)'
    . ./getfile
    subscriptions="$ans"
    ;;
*)  case "$groupdesc" in
    '') dflt='none';;
    *)  dflt=$groupdesc;;
    esac
    $cat <<EOM

If the default server doesn't support XGTITLE (to send newsgroup
descriptions) you may want to install a copy of the newsgroups file
on your local machine and periodically update it (by whatever means
you choose).  If so, select where you want to put it.  If not, enter
"none".

EOM
    fn=l~n:newsgroups
    rp='Where is the newsgroups file? ("none" ok)'
    . ./getfile
    groupdesc="$ans"
    subscriptions=''
    ;;
esac

case "$d_local" in
"$define")
    case "$d_nntp" in
    "$undef")
	d_inews="$undef"
	installinews=''
	;;
    *)  case "$d_inews" in
	"$undef")
	    dflt=none
	    ;;
	*)  set dflt installinews bin
	    eval $prefixit
	    ;;
	esac
	$cat <<EOM

If you want to be able to post articles to multiple servers, you should
install the inews that comes with $package.  You can either put inews into
a public spot for all newsreaders to use (recommended) or put it into a
private spot for just $package to use.  This enhanced inews knows how to
post to the current remote server and how to hand off an article to a
local-posting inews, as appropriate.  An additional benefit is that this
inews can share the same NNTP connection that the newsreader is using
instead of opening a new one.

In summary, a good installation would be to put $package's inews into
a public spot (e.g. /usr/local/bin) and, if you have a local news spool,
have it use a private copy of your news server's inews as a resource
(in a place such as /usr/lib/news).  If you don't want this enhanced
inews installed, answer "none".

EOM
	fn=d~n
	rp="Pathname where $package's inews will reside? (\"none\" ok)"
	. ./getfile
	installinews="$ans"
	case "$ans" in
	'') d_inews="$undef"
	    ;;
	*)  d_inews="$define"
	    useinews="$ans/inews"
	    ;;
	esac
	;;
    esac

    case "$installinews" in
    '') case "$useinews" in
	'') dflt="$inews";;
	*)  dflt="$useinews";;
	esac
	;;
    *)  case "$extrainews" in
	'') dflt="$inews";;
	*)  dflt="$extrainews";;
	esac
	;;
    esac
    echo " "
    fn=p~l:inews
    rp='Which inews should be used for posting local articles?'
    . ./getfile
    case "$installinews" in
    '') useinews="$ans"
	extrainews='';;
    *)  extrainews="$ans";;
    esac
    ;;
*)  case "$d_inews" in
    '') dflt="$prefix/bin";;
    "$define")
	set dflt installinews bin
	eval $prefixit
	;;
    *) dflt=none;;
    esac
    $cat <<EOM

$spackage comes with an inews that can post via the same NNTP connection that
the newsreader is using, provided the newsreader (such as $package) supports
this.  If you don't want to install this inews, enter "none".

EOM
    fn=d~n
    rp="Pathname where $package's inews will reside? (\"none\" ok)"
    . ./getfile
    installinews="$ans"
    case "$ans" in
    '')	d_inews="$undef"
	case "$useinews" in
	'') dflt="$inews";;
	*)  dflt="$useinews";;
	esac
	fn=p~l:inews
	rp='Which inews should be used for posting articles?'
	. ./getfile
	useinews="$ans"
	;;
    *)	d_inews="$define"
	useinews="$ans/inews"
	;;
    esac
    extrainews=''
    ;;
esac

